# bubble_flow: the hires pipeline            
# author CY                   
# date 2020/9/22                   

import os
import pandas as pd

configfile: "config/config.yaml"
# global variables
include: "rules/h.smk"
# global utilities
include: "rules/utils.smk"
# main workflow
## preprocessing
include: "rules/pp/pp.smk"
## for HiC
include: "rules/HiC/mapping.smk"
include: "rules/HiC/sample_check.smk"
include: "rules/HiC/sam2seg.smk"
include: "rules/HiC/seg2pairs.smk"
include: "rules/HiC/clean_pairs.smk"
include: "rules/HiC/impute.smk"
include: "rules/HiC/build.smk"
include: "rules/HiC/collect_info.smk"
## for RNA
include: "rules/RNA/prepareRNA.smk"
include: "rules/RNA/star_mapping.smk"
include: "rules/RNA/feature_count.smk"
## debugging entries
include: "rules/target_rules.smk"
## helper entries
rule run_pairs:
    input:
        expand(rules.clean12.output, sample = sample_table.index),
        rules.collect_info.output
rule run_dip:
    # get phased and dip-c imputated pairs file
    input:
        expand(rules.sep_clean.output, sample = sample_table.index),
        rules.collect_info.output
rule run_struct:
    # get hickit simulated 3d structure
    input:
        expand(rules.cif.output, sample = sample_table.index, rep=list(range(1,6)), reso=["4m","1m","200k","50k","20k"]),
        expand(rules.rmsd.output, sample = sample_table.index, reso = ["4m","1m","200k","50k","20k"]),
        rules.collect_info.output
rule run_RNA:
    input:
        expand(rules.matrix_count.output, ref = sample_table["ref"].unique() if "ref" in sample_table.columns else config["global_ref"])
rule All:
    input:
        expand(rules.cif.output, sample = sample_table.index, rep=list(range(1,6)), reso=["4m","1m","200k","50k","20k"]),
        expand(rules.rmsd.output, sample = sample_table.index, reso = ["4m","1m","200k","50k","20k"]),
        rules.collect_info.output,
        expand(rules.matrix_count.output, ref = sample_table["ref"].unique() if "ref" in sample_table.columns else config["global_ref"])